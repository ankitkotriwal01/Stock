import streamlit as st
import yfinance as yf
import pandas as pd
import plotly.graph_objects as go
from ta.trend import SMAIndicator
from ta.momentum import RSIIndicator
import requests
from bs4 import BeautifulSoup
import requests
from bs4 import BeautifulSoup


# Function to format currency values
def filter_tickers(prefix, available_tickers):
    return [ticker for ticker in available_tickers if ticker.startswith(prefix.upper())]

def get_ticker_from_company_name(company_name):
    ticker = None
    url = f"https://finance.yahoo.com/quote/{company_name}"
    try:
        response = requests.get(url)
        soup = BeautifulSoup(response.text, 'html.parser')
        ticker = soup.find('meta', property='og:tickersymbol')['content']
    except Exception as e:
        print(f"Error fetching ticker for {company_name}: {e}")
    return ticker

def get_trading_recommendation(stock_history):
    sma_50 = SMAIndicator(close=stock_history['Close'], window=50).sma_indicator()
    sma_200 = SMAIndicator(close=stock_history['Close'], window=200).sma_indicator()
    rsi = RSIIndicator(close=stock_history['Close']).rsi().iloc[-1]

    if sma_50.iloc[-1] > sma_200.iloc[-1] and rsi < 30:
        return "Buy"
    elif sma_50.iloc[-1] < sma_200.iloc[-1] and rsi > 70:
        return "Sell"
    else:
        return "Hold"
def get_stock_news(ticker):
    # Construct Google search URL for stock news
    url = f"https://www.google.com/search?q={ticker}+stock+news"

    # Send HTTP GET request and parse the response
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')

    # Extract news articles and their links
    news_articles = []

    for item in soup.find_all('div', class_='BNeawe vvjwJb AP7Wnd'):
        title = item.get_text()
        # Find the parent 'a' tag and retrieve the 'href' attribute (URL)
        link = item.find_parent('a')['href']
        # Remove any unnecessary URL parameters added by Google
        clean_link = clean_google_news_link(link)
        # Append the article title and clean link to the list
        news_articles.append({'title': title, 'link': clean_link})

    return news_articles

def clean_google_news_link(link):
    # Extract the clean URL from the Google search result link
    clean_link = link.split('q=')[1].split('&sa=')[0]
    return clean_link


def get_investor_reports(ticker):
    url = f"https://www.google.com/search?q={ticker}+investor+report"
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    reports = []

    for item in soup.find_all('div', class_='BNeawe vvjwJb AP7Wnd'):
        title = item.get_text()
        link = item.find_parent('a')['href']
        clean_link = clean_google_report_link(link)
        reports.append({'title': title, 'link': clean_link})

    return reports

def get_peer_reports(ticker):
    url = f"https://www.google.com/search?q={ticker}+peer+report"
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    reports = []

    for item in soup.find_all('div', class_='BNeawe vvjwJb AP7Wnd'):
        title = item.get_text()
        link = item.find_parent('a')['href']
        clean_link = clean_google_report_link(link)
        reports.append({'title': title, 'link': clean_link})

    return reports

def clean_google_report_link(link):
    # Extract the clean URL from the Google search result link
    clean_link = link.split('q=')[1].split('&sa=')[0]
    return clean_link

def format_currency(value):
    if value == 'N/A':
        return value
    else:
        return f"${value:,.2f}"

# Function to format percentage values
def format_percentage(value):
    if value == 'N/A':
        return value
    else:
        return f"{value:.2f}%"

# Function to fetch stock data
def get_stock_data(ticker):
    stock = yf.Ticker(ticker)
    info = stock.info
    data = {
        'Name': info.get('shortName', 'N/A'),

        'Previous Close': format_currency(info.get('previousClose', 'N/A')),
        'Market Cap': format_currency(info.get('marketCap', 'N/A')),
        'Open Price': format_currency(info.get('regularMarketOpen', 'N/A')),
        'Average Price': format_currency(info.get('regularMarketPrice', 'N/A')),
        'Beta (1 year)': info.get('beta', 'N/A'),
        'Bid Price': format_currency(info.get('bid', 'N/A')),
        'Ask Price': format_currency(info.get('ask', 'N/A')),
        'PE Ratio (TTM)': info.get('trailingPE', 'N/A'),
        'EPS (TTM)': format_currency(info.get('trailingEps', 'N/A')),
        "Day's Range": format_currency(info.get('dayLow', 'N/A')) + ' - ' + format_currency(info.get('dayHigh', 'N/A')),
        '52 Week Range': format_currency(info.get('fiftyTwoWeekLow', 'N/A')) + ' - ' + format_currency(info.get('fiftyTwoWeekHigh', 'N/A')),
        '1 Year Target': format_currency(info.get('targetMeanPrice', 'N/A')),
        '52 Week Change (%)': format_percentage(info.get('52WeekChange', 'N/A')),
        'Earnings Date': info.get('earningsDate', 'N/A'),
        'Forward Dividend': format_currency(info.get('forwardDividendRate', 'N/A')),
        'Dividend Yield': format_percentage(info.get('dividendYield', 'N/A')),
        'Volume': info.get('volume', 'N/A'),
        'Ex-Dividend Date': info.get('exDividendDate', 'N/A'),
        'Enterprise Value': format_currency(info.get('enterpriseValue', 'N/A')),
        'Price/Earnings Ratio (Trailing)': info.get('trailingPE', 'N/A'),
        'Price/Earnings Ratio (Forward)': info.get('forwardPE', 'N/A'),
        'PEG Ratio': info.get('pegRatio', 'N/A'),
        'Price/Sales Ratio': info.get('priceToSalesTrailing12Months', 'N/A'),
        'Price/Book Ratio': info.get('priceToBook', 'N/A'),
        '50-Day Moving Average': format_currency(info.get('fiftyDayAverage', 'N/A')),
        '200-Day Moving Average': format_currency(info.get('twoHundredDayAverage', 'N/A')),
        'Enterprise Value/EBITDA': format_currency(info.get('enterpriseToEbitda', 'N/A')),
        'Profit Margin': format_percentage(info.get('profitMargins', 'N/A')),
        'Operating Margin': format_percentage(info.get('operatingMargins', 'N/A')),
        'Return on Assets': format_percentage(info.get('returnOnAssets', 'N/A')),
        'Return on Equity': format_percentage(info.get('returnOnEquity', 'N/A')),
        'Revenue': format_currency(info.get('totalRevenue', 'N/A')),
        'Revenue per Share': format_currency(info.get('revenuePerShare', 'N/A')),
        'Quarterly Revenue Growth': format_percentage(info.get('quarterlyRevenueGrowth', 'N/A')),
        'Gross Profit': format_currency(info.get('grossProfit', 'N/A')),
        'EBITDA': format_currency(info.get('ebitda', 'N/A')),
        'Diluted EPS': format_currency(info.get('trailingEps', 'N/A')),
        'Quarterly Earnings Growth': format_percentage(info.get('earningsQuarterlyGrowth', 'N/A')),
        'Total Cash (MRQ)': format_currency(info.get('totalCash', 'N/A')),
        'Total Cash Per Share (MRQ)': format_currency(info.get('totalCashPerShare', 'N/A')),
        'Total Debt (MRQ)': format_currency(info.get('totalDebt', 'N/A')),
        'Current Ratio (MRQ)': info.get('currentRatio', 'N/A'),
        'Book Value Per Share (MRQ)': format_currency(info.get('bookValue', 'N/A')),
        'Operating Cash Flow (TTM)': format_currency(info.get('operatingCashflow', 'N/A')),
        'Levered Free Cash Flow (TTM)': format_currency(info.get('freeCashflow', 'N/A')),
        'Share Statistics': format_currency(info.get('sharesOutstanding', 'N/A')),
        'Dividends & Splits': info.get('dividendsAndSplits', 'N/A'),
        'About Company': info.get('longBusinessSummary', 'N/A'),

    }
    return data

# Function to fetch historical stock data
def get_stock_data_history(ticker):
    stock = yf.Ticker(ticker)
    data = stock.history(period='20y')
    return data

# Main function to run the app
def main():
    st.set_page_config(page_title='Stock Analysis App', layout="wide")

    # Custom CSS to set font to Times New Roman
    st.markdown(
        """
        <style>
        body {
            font-family: 'Times New Roman', Times, serif;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

    st.title('Single Stock Data')
    st.sidebar.title('Search')

    # Get user input for ticker symbols
    available_tickers = ["BAC","T","MO","DAL","AA","AXP","DD","BABA","ABT","UA","AIG","ALL","ACN","ABBV","MT","LLY","AGN","APA","APC","NLY","ABX","ADM","LUV","PANW","AET","AEP","DB","RAI","AEM","APD","NVS","ANF","RAD","A","AZO","AN","AZN","AES","GAS","BUD","ARR","BDX","AKS","AB","CS","AFL","AMP","AVP","AEO","AWK","NVO","ALK","PAA","AAP","NAT","FAV","AIV","AEE","UBS","ANTM","AGU","AG","ABC","STO","ATI","ADT","AVB","ATW","LH","AVY","AUY","ASH","ANR","ABM","ATO","ARP","AON","ADC","APU","AV","ADS","AYI","AWH","AMT","ACM","ARW","ARI","ARG","AR","AMC","AL","AAN","WTR","FCAU","BAH","AVT","ALB","AIZ","SAIC","AXLL","AU","ARO","APH","AMX","AI","WMC","ALJ","ACH","Y","VJET","OA","APTS","APO","ALG","AHC","RBA","MAA","BAM","AT","ASX","ARCO","ANET","AIR","AF","WAB","RS","PKG","CSH","AVA","AMG","ALSN","AGO","ROK","DNI","AZZ","ARMK","AOS","ANFI","AMID","ALE","AHT","ACW","ABB","SPR","SEE","DLPH","CBL","BBVA","AYR","ALEX","WMS","PAG","ETH","AXE","AMH","AME","AJG","AGCO","ACRE","WAL","SYT","HTA","BSI","ATU","ARE","ALR","AIN","AHL","AGX","AEG","ABG","ZX","NXJ","KS","GPI","ENI","AXTA","AWR","AWI","AUO","ATHM","AROC","ANH","ALX","AHS","AGI","AER","ODC","NAO","KAR","HIVE","FMS","CXW","AXS","AXL","ASGN","ALDW","AIT","AEL","ACCO","RPAI","KYN","AP","AMTG","AM","ALV","AKR","SAH","CAS","ASB","AHP","ABEV","STAY","RGA","CEA","AXR","AVG","AVD","ARC","AOI","ALLY","ABR","NSAM","MITT","LCM","HASI","GOL","GIL","ATTO","ATR","ASR","ASC","AOD","AAV","AAT","ZNH","UAM","NTT","NFJ","LNT","HIX","FAF","FAC","BGR","BETR","ATV","APLE","AFG","WAIR","RESI","LND","LFL","ESD","CII","AVV","ALLE","AJRD","AHH","AGM","TEO","NOA","NCZ","MTT","MHG","HIO","GRR","ENL","CGA","CAF","ATEN","ARDC","ARCX","ANW","AEB","ADPT","ACC","REX","PAC","NNA","IGD","BTI","AWF","AVX","ARES","AMRC","AMOV","AFW","AAC","XKE","VLRS","NEA","JEQ","IGA","IDE","GBAB","EVTC","BTZ","AWP","ATE","APF","APB","AMBR","AIB","AGRO","AFST","ADX","TKC","RZA","PEO","NCV","NBB","NADL","MHY","MHF","HYB","GAM","EOD","CBA","AVK","ASA","AMFW","AGR","AGD","AFC","AFA","AEK","TANN","RYAM","NAC","MGR","HYI","FEI","AXON","AVH","AVAL","APAM","AFGE","ACV","ACG","TVE","TVC","SGF","OMAM","NSA","NKG","NAD","LDP","JRI","JAX","GGM","DMO","DEX","AUQ","ARL","AKP","AFB","AEUA","WIW","PSF","NAZ","MNP","MMU","JTA","IAE","GCP","FTAI","FGB","EMD","EAA","CEE","BUI","AKO-A","AJX","AFSD","ACP","ABRN","USA","PHX","KYE","JCE","JBR","JBK","IGI","GRO","GER","EGIF","BTA","BRSS","AIY","AIF","AED","WIA","WEA","SCD","RUK","PZE","PAI","NORD","NMA","NKX","MOG-A","MAV","LDF","JPI","JBN","GGZ","GCH","EXD","EHI","EAE","DRA","DFP","DDF","CVB","BGY","ASG","ARU","ANTX","AIC","AC","TPZ","NZF","NVG","NUW","NIE","MHNB","KED","HJV","ASPN","AKO-B","AEH","TANP","TANO","SBW","MHNC","MHNA","JDD","GYC","GTN-A","GFY","GDF","FCAM","AFSS","AFGH","NBD","LGI","JMLP","GDO","GCV","EAB","BAC-PL","KMF","CIG-C","BST","BCS-PD","AGM-A","NRK","NLY-PA","NAN","DD-PB","BF-A","ASB-PB","AMT-PB","AIW","AHT-PE","AGN-PA","AFT","BA","IBM","BP","BAX","BRK-A","BBY","BX","BSX","BMY","USB","BRK-B","BLK","YUM","BTU","BK","ZBH","PBR","BHP","BEN","LB","BMO","BBT","BPT","BKS","HRB","BHI","STI","TAP","BITA","BCS","TD","MTB","BXP","RY","BCR","BCE","SWK","DSU","B","BWA","BLL","TOL","SAM","BOX","BC","PBI","CBB","BKE","BGS","BCEI","BBG","CM","BBL","TUP","SB","BG","BRS","BGC","RBS","NCS","BBD","SAN","EBS","BPL","STL","EAT","CFR","BNS","BMS","BAS","WBK","BKD","BIO","WRB","VLY","CBI","BXLT","BLOX","IBN","DNB","BIP","BHE","SBY","CBK","BYD","BR","BMI","BIG","BDC","BCO","BAP","BAK","RATE","PBH","BZH","BSBR","BRC","SPB","LYG","BTE","BPI","TLRD","NYCB","NBHC","CST","BXS","BOH","BKU","BKH","BH","BFAM","BDN","PSB","PB","BXE","BWXT","WF","JBT","HTR","HDB","FBP","FBHS","BWP","BURL","BRO","BGG","BCC","BANC","IBP","EBR","CIB","CBU","BVN","BORN","BNK","SJT","SBS","NX","GWB","CUDA","CBD","BXMT","BSL","BIN","BFS","BFR","BF-B","BERY","BBN","SBH","ETV","BRX","BLX","BIF","BHLB","SALT","RBC","QSR","PBT","HYT","BSAC","BRT","BRFS","BLT","BHL","BBW","BBDO","FBC","BOOT","BGT","UBA","OFG","MUH","MFT","INF","IBA","FRC","ENZ","BXC","BWC","BT","BSM","BOE","BNY","BLW","BKT","BID","BCX","BBX","MYD","MUC","ETW","DKT","BSMX","BNJ","BMA","BKK","BCRH","UBP","MYJ","MQT","INB","BTT","BOXC","BME","VIV","NGVC","MHN","MHD","DXB","DTK","CUBI","BYM","BXMX","BWG","BW","BTO","BLD","BKFS","BIOA","BHK","BFO","BDJ","BCH","BALT","VBF","MYN","MUI","MSL","MFL","MCI","DMB","CBPX","BPY","BNED","BKN","BIE","BFZ","ZBK","MVT","MUA","EGF","BSE","BQH","BLH","BEP","BEL","BAF","TPVG","MYI","MUJ","MNE","MIY","MCA","HHY","GSBD","DUC","CO","BOI","BJZ","BFK","SWJ","MYC","MUE","MPV","MEN","ETB","CUBS","BSD","BIT","BGX","BGCA","BBF","MQY","MFCB","BGH","BBK","SCNB","PBR-A","MYF","MPA","FRA","BPK","BKHU","BGB","TPVZ","RBS-PR","DSM","BZT","STI-PE","SLTB","SAN-PI","SAN-PC","BOCA-CL","BK-PC","ZB-PG","WRB-PB","USB-PO","STZ-B","RBS-PT","MOG-B","LEN-B","GEF-B","CHK-PD","PCL","F","GE","XON","XOM","VZ","C","DIS","KO","JPM","PG","WFC","GM","MCD","S","CAT","TGT","CVX","CHK","MRK","CMG","UTX","ORCL","MMM","COP","EMC","DE","UNP","CRM","LOW","CVS","LMT","SO","HAL","JCP","EMR","ED","X","DOW","LNKD","FDX","CL","SNE","TM","STT","MOS","TRV","KMB","GD","MON","EXC","DUK","UAL","NOK","KSS","MRO","HPE","RTN","VLO","DVN","OXY","MPC","KR","LVS","CBS","WY","WHR","TWC","O","IP","PPL","MCO","GME","CTL","HMC","EL","DDD","COF","POT","GLW","CF","NEM","XRX","DANG","CB","SHW","RF","NOC","JCI","CLX","WMB","CAH","NSC","TSO","SYY","CIEN","VFC","SCCO","K","HRL","SYK","RRC","CPB","SLW","DG","SSW","CMI","CCL","MKC","NYT","EW","CI","CAG","VMC","COH","CLF","NUE","RL","MCK","LEN","KKR","DOV","CNX","NCR","HL","NFX","MNK","LCI","KMX","HES","TJX","SE","HUN","HSY","ETN","QIHU","NE","L","DHR","CIM","CSC","YGE","WU","PXD","NAV","EMN","CAB","THC","PH","TSM","TIF","SWN","RGR","JNS","GBX","WLL","LNC","CLR","CAM","SCHW","FE","ETR","CX","CLB","YZC","XEC","NRF","MUR","MMC","FLR","TEG","SIX","PVH","PCG","MDP","H","GPC","FUN","DTE","DF","CP","CNI","RRD","PRGO","MNR","GCI","COG","CMO","CCI","WPC","TRP","TDC","RDC","OC","MFC","CEO","STJ","SGY","RCL","ERF","COO","CNQ","TNH","SNP","OAK","MAS","LUK","LLL","ITC","IMAX","FMC","DCI","CCJ","TRGP","PGR","NRZ","EQT","CC","WWAV","WAT","TRI","TLN","SCG","PGH","MAIN","CVRR","ZMH","UIS","TMK","SWFT","SJM","EGO","EGN","CMS","CHU","WYN","OCN","MSM","HK","CXO","CR","CNP","CDE","CBG","CACI","XIN","SN","SF","NWE","NFG","MOD","IVR","HRS","HMY","FLS","CRC","CPK","COL","CE","VVC","TEL","SNX","SJW","MCY","JKS","HFC","FDO","CHL","USG","TWO","TRNO","TMST","SNV","OSK","OLN","NPTN","MTW","MTRN","KGC","IAG","FHN","EV","ECA","DECK","CYH","CNC","CFX","CBM","TK","STR","SSP","SM","MTG","MAC","IO","EVC","CVC","CRK","CMC","CCE","VG","TU","MSG","MKL","LVLT","KSU","KRC","KIM","KATE","ITT","HNI","HLS","DDR","CUK","CNO","CNL","CEQP","OFC","NCT","MIC","LGF","JMI","GIB","CSV","CSL","CRR","CMA","CJES","CHS","CHD","TCAP","RGS","QTM","PCI","NWN","MJN","LC","IPG","IMN","GTY","EXK","ESL","ELY","DRE","DEL","CPE","COR","CNK","CLGX","TG","SCI","SC","PTR","PNW","OGE","LEA","HTGC","HSC","CUB","CMP","USM","UFS","SXT","SON","RXN","RKT","PAR","KODK","JOE","JBL","IPHI","GMT","FUL","EE","CYS","CVI","CVG","CTB","CRI","CRH","CPA","CHH","CEB","VC","UVV","UTL","UNF","TPC","SKT","SEM","PJC","ORC","NCI","MX","KEP","JAH","ICA","GRA","FSIC","FCN","DLX","CVEO","CPGX","COT","CLI","CHSP","CHE","CGI","CCU","CCK","CCC","CBT","CALX","UNT","TEX","SMG","SEMG","RCI","NEU","MCC","LNN","EVER","CPL","CNS","CLDT","CLD","CHMT","CGG","CBR","WLK","VAL","VAC","UGI","UAN","TTC","SWC","SUI","SSD","SPA","SID","RM","REG","NVRO","NPD","MTH","LPL","HTS","GHM","GHL","GHC","CWEI","CPG","CMN","CIG","CHGG","CAI","VCRA","TRR","STOR","SQM","SLG","SKM","SJR","SCL","RSO","PTY","ORI","NJR","MNI","LFC","KN","INT","HMN","GRC","EPE","CZZ","CYD","CWT","CW","CVT","CVA","CLH","CLC","CEL","CCP","CBZ","CAJ","CAE","XTLY","WBS","TNC","TKR","RLI","RLGY","REN","PBA","PAH","ONDK","LADR","IEX","IDT","GFF","FOE","FIX","FICO","DAN","CRT","CRS","CRL","CLNY","CIVI","CIT","CIE","CHKR","WLKP","VRTV","SGM","RLH","PKE","PKD","OZM","MYCC","MVC","MTDR","KAMN","JGW","IX","IOC","IHC","GDOT","FSS","FNB","ECOM","CVE","CSLT","CPT","CPF","CFI","CFG","CDR","CDI","WNC","WLT","VNCE","TY","STC","SHG","RNP","PRA","PPP","PHH","PFGC","MLP","MCS","LPX","IVC","HXL","HHC","HEI","FNV","FMX","FCF","EQC","EHIC","DRH","CPN","CHMI","CATO","WRK","WCN","UMC","TCO","TAC","SXI","SRC","SQNS","POL","PES","MC","KT","KEX","GLT","GCAP","FMD","FF","FCFS","FBR","EPC","EDN","EDE","DX","DQ","CTQ","CSU","CLS","CKP","CIO","CIA","CCO","USAC","TREX","TRC","TPUB","TCB","SWX","STV","SHI","PNY","MY","KYO","KEM","GPX","FC","DDC","CUZ","CRY","CPPL","CHA","SPXC","SOR","SAR","NMFC","NJ","KOF","KMPR","IGR","GVA","GTS","FDC","FCPT","EXCU","ECR","CUBE","CSS","CPS","CORR","CNHI","CNA","CMRE","CIR","CHT","CELP","CCM","CAL","ZFC","XNY","WCIC","VVI","TRCO","SMI","SFN","POR","PFD","PDS","NWY","NHF","MWV","MPX","GKOS","GEB","EXAR","ETM","DBL","CSRA","CRCM","CNNX","CLW","CKH","CHN","UTF","TCS","HVT","HTGZ","GYB","GPK","ELP","DAC","CXE","CTT","CTS","CSTM","CNCO","CMCM","CCS","ZEP","TXTR","RYI","ROYT","RALY","PYT","PNX","OME","NRE","NEFF","MCN","LITB","CTY","CTX","CPAC","COTY","WAC","SCX","PRTY","PHI","NCB","MCRN","KMG","JSD","JOF","ICL","HZN","HAE","GUA","EXTN","DRC","DOOR","DL","CTW","CODI","CEM","CCSC","CAA","VTA","TMHC","SWNC","SFR","ROG","RFI","PPX","PMC","PFO","NNC","KTP","JW-A","JQC","ICD","GEH","DEG","HD","DTV","D","DPS","DRI","RDS-A","KHI","DHI","DGX","DFS","DLR","DPZ","DNR","DMD","DDS","DHG","DEO","DSW","DO","DBD","RDS-B","DY","DPM","DKS","DATA","DVA","DV","DRII","DFT","DRQ","DNP","DGI","DSX","PACD","DST","DLB","DW","DK","DHT","KKD","DYN","DCO","DOC","DWRE","WD","DHX","DAR","KST","FPF","DLNG","DIN","TGS","RDY","LPG","DRD","DM","DCT","DCM","PLOW","PDI","FDP","DTF","EOC","TDS","TDE","LEO","GDV","ETG","LBF","HTD","DVD","DKL","EXG","DSL","DNOW","DEA","DPLO","DCUC","MFD","KTF","KMM","IHD","EDD","DHF","DEI","DDT","TDJ","PDT","MZF","DPG","DDE","CTU","JTD","JHA","GHY","EVT","NIQ","MMD","LOR","ETY","ETO","DTZ","DTQ","DCUB","DCA","TDI","TDF","TCRZ","NID","IID","EVG","FDI","FDEU","DSE","DIAX","PYS","MSD","JPM-PE","DX-PA","DSXN","DDR-PK","WFC-PO","TDA","SPXX","MS-PF","ISD","GS-PJ","DUKH","TCRX","STT-PC","PSA-PQ","MS-PA","KSM","JPM-PB","JPM-PA","DYN-WT","DLR-PF","CMRE-PD","C-PJ","ZB-PF","PSB-PU","PSA-PY","PSA-PW","MS-PI","KIM-PI","JPM-PF","HUSI-PH","HUSI-PG","GDV-PD","FRC-PC","FRC-PA","DX-PB","DLR-PI","DFT-PB","DD-PA","COF-PC","BXP-PB","BCS-PC","BBT-PE","BBT-PD","BAC-PW","BAC-PE","ZB-PH","WFC-PW","WFC-PR","WBS-PE","USB-PN","USB-PA","TCB-PB","STT-PE","STT-PD","STAR-PD","RF-PB","RF-PA","PSB-PV","PSB-PS","PSA-PZ","PSA-PU","PSA-PS","PBI-PB","NNN-PE","KMI-PA","JPM-PH","GDV-PA","FRC-PF","FRC-PE","EVER-PA","EVA","RIT","ELLI","EPD","ETP","NEE","EOG","NTI","SU","ETE","NRG","ICE","WEC","PEG","EQR","XEL","EIX","ESV","SRE","NBL","ESI","TE","NUS","PBF","EDU","SEP","GXP","EJ","WR","NS","HLX","EFX","ECL","HOV","ES","ENB","WWE","WPX","RE","LF","EXR","SXE","KEG","GNE","ENR","EC","EPAM","PQ","PE","ENV","ENLK","EFC","XCO","JEC","GAB","E","SXC","EQY","WRE","RICE","NPO","NGL","GEL","ENS","EME","EEP","SEAS","HE","EXP","EQM","ENLC","ENH","EMES","SPN","RGC","EGL","LYV","KOS","ESS","EPR","PEI","NDRO","VOC","VLP","TEP","EVR","ERJ","EIG","XRS","TNP","SXCP","MEI","JE","EXPR","ERA","HEP","FET","EGY","TTP","SSE","ESE","ENBL","EEQ","ESTE","EROS","EBF","EARN","VTTI","PAM","NRT","LEE","HEQ","EVHC","EVDY","ECT","UE","TEGP","JONE","IRET","EXAM","ESRT","EQS","EQGP","ELS","EDI","XUE","PGZ","NEP","MUS","JPEP","ENVA","ELA","VET","MXE","MEP","FPL","EMF","EDR","IRR","FIF","EVH","EGP","EFT","WGP","JMF","GI","FEO","FELP","EOT","EOI","TEI","MSF","JRS","EZT","EVRI","ETX","EOS","ENJ","ELJ","TYG","NDP","MIE","KEF","JGV","HIE","GGE","FFA","EVF","EURN","ESNT","ELU","EFR","EFM","EFF","EEA","OEC","GPM","EVN","EQCO","EMO","ECCA","ECC","CTR","GEK","WPXP","TSNU","SRF","EMQ","EDF","GEQ","ENO","EMZ","ECCZ","NEV","MNR-PB","GXP-PE","EPR-PF","EPR-PC","ELB","CMS-PB","STAR-PE","PEI-PA","NEE-PH","IRET-P","GXP-PD","GRP-U","GAB-PH","EP-PC","EBR-B","FCX","FIT","PRU","FL","FIS","PNC","TSN","PFG","KFS","TMO","FTI","MFA","FRO","WDR","GNW","MHFI","SYF","FLO","IFF","FTK","SLF","PHK","GFI","FRT","FII","PF","KB","FIG","FDS","HIG","FLTX","SFL","RJF","FN","FCH","FLT","FGP","SFS","RAS","RFP","RACE","FR","FT","FLY","VOYA","THS","FOR","FNF","FFG","ZF","PFS","MTU","MFS","ZTR","FUR","FPO","TTF","SMFG","NPI","FI","PJH","PCF","NMZ","IFN","GDL","MFG","JPS","HTY","GF","SPE","RCS","PLNT","PKO","PFSI","NQU","HYF","HPI","GMZ","TSI","NQM","NPV","NPP","NMT","MXF","MSP","KF","JFR","FSM","SWZ","PRH","PGP","NUO","NQP","NPM","MGU","KFH","JTP","IVH","GOF","FPI","FMO","FENG","TKF","PFL","NMY","IRL","HGH","FSD","FNFV","YDKN","VTN","SRV","SGL","RFT","PZC","PYN","PML","PMF","PCN","OAKS","NUV","NTC","NSL","NIO","NCA","KAP","JPW","HPF","GJR","FPT","FOF","FMN","FHY","FGL","FFC","FCB","FAM","VGI","TSLF","PNF","PHD","NYV","NUM","NQS","NOMD","NOM","MFO","JPC","JMM","HPS","GJP","GJH","GHI","FMY","FLC","FCE-A","VGM","THW","SZC","SMM","RQI","PJS","PFN","JHP","HTF","CIF","CEN","TLI","PFK","PCQ","NNY","NMI","KIO","JRO","JHY","JFC","GJO","FMSA","CSI","THQ","RJD","RFTA","PNI","PCM","NQI","NMS","NMO","JGH","IIF","GIM","FSCE","RIV","PMX","KFI","JMT","JLS","GJV","FLOW","FCT","TWN","TFG","NTX","NPT","NPF","HVT-A","GJT","FSB","RBS-PI","RAS-PA","CLA","WFC-PL","WFC-PJ","SNV-PC","PNC-PQ","PFG-PB","NRF-PE","NRF-PB","NIM","NEE-PC","KFN-P","HTS-PA","GDL-PB","FCE-B","COF-PP","ALLY-PA","AGM-PB","AFSI-PB","WFE-PA","VER-PF","GS","GSK","GIS","GPS","UNH","HTZ","GG","IGT","XL","SPG","JOY","LG","IT","GWW","VGR","OMC","GGG","RDN","MEG","ING","GES","GEO","GGP","OGS","UNM","TGI","SA","PSG","GPN","TAL","GWR","GBL","G","MOV","MG","GNC","GCO","IHG","HRG","GEF","TDG","SGU","PGEM","NGG","KRG","HCI","WHG","TPH","SNR","MDU","GWRE","GTN","GNRC","WTM","THG","NKA","GRUB","GLP","LUX","JMP","GSL","GLOG","GIMO","TV","NSH","ITG","GGB","WPG","WG","WES","PAGP","NEWM","MRC","GSI","GPRK","GFA","VPG","SERV","RGT","XOXO","THR","GMED","GLOP","GLOB","GLF","GDDY","GB","TNET","TGH","ORN","OB","GUT","MPG","MIG","GGT","THGA","ISP","GZT","GNL","NGS","ISG","IND","GPT","GNK","SBGL","INZ","GNT","GJS","GEN","ZAYO","SGZA","MSK","GTT","GSH","GNRT","MWG","ISF","HCJ","GRX","PGRE","PGND","OSG","MWO","MGF","JMPC","JMPB","GRAM","GSJ","GMRE","CXH","SRG","GS-PD","WPG-PI","SPG-PJ","RBS-PS","LYG-PA","HPQ","HON","VIPS","HOT","HCN","POST","HCP","HP","HOG","HUM","KBH","HAR","HW","LL","RHI","OHI","KORS","HLF","RHT","RH","HSBC","USNA","RAX","HR","HST","HCA","WGL","Q","WCG","HLT","SFUN","HCLP","MOH","HBI","SLCA","HYH","HOS","RNR","LDOS","HTH","LQ","JHX","ST","NM","NHI","JHI","HGG","NSM","KND","ITUB","HZO","HPY","UVE","RHP","PRO","MHO","KCG","HPP","HNR","TRQ","ONE","NOAH","NMR","NLSN","HNP","HIL","HI","WBC","UHS","TMH","SNOW","RMAX","MDC","LHO","KW","HII","VR","LXFT","KOP","JMEI","IL","HIW","HGT","HF","OPY","INXN","INN","HT","HHS","LXFR","HRC","UHT","PEB","IMS","HUBS","XHR","WLH","QTWO","PHT","LEJU","HY","HQH","SHO","HLI","SPLP","KEN","HSEB","HRTG","HQL","HIFR","TUMI","TAOM","NVGS","JP","HUBB","HCHC","NWHM","JHS","HTGX","HMLP","CHCT","HVB","CCZ","SNHN","OMF","MHI","HBM","CMU","VLT","HSEA","HTGY","SNHO","NM-PH","HUSI-PF","HEI-A","SHO-PE","MHO-PA","KWN","RNR-PE","RNR-PC","NMK-PB","NM-PG","MRH-PA","LHO-PI","INN-PB","HPT-PD","HCN-PJ","HCN-PI","GRX-PA","AXS-PC","AMH-PA","AHL-PC","AHL-PB","SHO-PD","WMT","SUNE","VRX","PFE","NKE","PEP","TWTR","PM","V","TWX","KMI","UPS","M","MET","MA","P","JNPR","NOV","YOKU","TEVA","MSI","TYC","WTW","SKX","SHAK","PPG","VMW","VTR","TER","YELP","WM","JWN","ITW","MGM","WSO","TRN","NI","MLM","R","PX","LXK","INFY","WDAY","MXL","RSG","MWW","LEG","URI","NBR","IR","WFT","TSS","PHM","WUBA","PSTG","MAN","LTC","SNA","RYN","IRM","SQ","LM","INVN","ZTS","WSM","RES","PII","OKE","OAS","VAR","TDW","STWD","PWR","IM","XPO","NNN","MUSA","IVZ","WGO","STAG","RPM","OMI","WST","SVU","OI","MHK","JLL","WNR","RENN","TXT","OII","NWL","LYB","TFX","RT","LII","TAHO","RSE","PKI","PAY","NSR","NQ","KBR","VSLR","RRTS","RKUS","NOW","MMS","WAGE","VNTV","TWI","TGNA","SUP","MTZ","MSCI","MPW","MDR","LAD","VMI","TDY","ROL","PRLB","PMT","PLD","MUX","I","YUME","VER","TYL","TBI","REV","POWR","NXRT","N","XYL","UDR","TSLX","TR","PIR","MTN","INGR","TPX","THO","SSNI","SDT","RWT","OXM","MWA","MMI","LXU","KRO","ZOES","WWW","WTI","WRI","VEEV","UFI","SWM","STNG","RMD","PPS","NVR","NR","KEYS","IPI","WMK","WEX","W","ROP","RNG","PNM","OMN","MYE","MTX","MGA","LDR","KNX","VEC","SSS","QUAD","PRI","NP","NNI","NL","MTD","MATX","LOCK","KNL","XRM","WTS","TTI","TIER","TI","TEN","SSTK","SSI","SRI","SDR","OIS","NYLD","NLS","LZB","LPI","IHS","WOR","TRK","TOWR","TDOC","SRT","RUBI","RST","REXR","QTS","PN","PLT","ORA","MTOR","MD","LDL","USPH","TLK","SCS","RSPP","RIC","PPT","PAYC","OLP","NXP","NTL","NPK","NMBL","NC","MDLY","MBI","KFY","KAI","IRS","IDA","ZEN","WCC","VSI","JNJ","SIG","SJI","JCAP","LMHA","PFH","JW-B","TMK-PB","JPM-WT","JPM-PCCL","JSN","NEE-PI","JPZ","KEY","PHG","KNOP","KMT","LRN","KRA","KWR","KTN","KCC","KTH","KMPA","KKR-PA","VNO-PK","KYN-PG","KSU-P","KRC-PH","KRC-PG","KODK-WTA","SLB","RIG","SDRL","TSL","OKS","TCK","TTM","MMP","RLJ","WPZ","TROX","SOL","SUN","STON","SPH","TOO","TNK","TGP","SMLP","SDLP","PWE","NMM","MPLX","RRMS","WIT","SSL","LXP","TPL","SXL","TLP","SRLP","NRP","WNS","PSXP","LPT","LAZ","YRD","RNF","WPT","TVPT","TPRE","MIXT","TCP","WBAI","SHLX","RIGP","ZPIN","RMP","NSS","LUB","TARO","WMLP","WNRL","VEDL","TLLP","NAP","CNXC","CAPL","USDP","PBFX","QEPM","OCIP","VTRB","LCRT","SLRA","CINR","MPSX","VNO-PL","TOO-PB","MDT","MS","MBLY","MTL","MSB","MANU","MBT","PIM","MLR","SMP","MODN","MMT","MED","MSA","MLI","MVO","MN","PZN","MTR","MSGN","MRIN","VMO","SUM","RMT","MIN","MFM","IIM","ICB","PMO","MORE","IQI","VKQ","OIA","MVCB","TSQ","OUT","MSCA","MCV","VPV","NHA","MFV","MCR","CBX","MWR","PMM","CBO","VCV","MKC-V","MCX","MCQ","MET-PB","MER-PM","UN","STM","SNN","NSP","NTZ","CTZ","NYRT","NXN","NXR","NXQ","NVTA","NTP","TI-A","RENX","NXC","OSB","NEWR","CTV","NW-PC","RY-PS","TNP-PD","SAN-PA","OFG-PD","NYLD-A","NRF-PD","NRF-PC","NMK-PC","NLY-PD","NI-WI","NGLS-PA","NEE-PQ","NEE-PP","ORAN","OIBR","VSTO","PDM","OPWR","CABO","OOMA","OIBR-C","RPAI-PA","OFG-PA","BML-PG","BAC-WTA","TOO-PA","RBS-PH","O-PF","COF-PF","BML-PJ","BAC-PY","BAC-PC","BML-PL","MTL-P","BML-PH","PSX","RIO","PSA","UL","PNR","PER","PSO","PUK","STE","PKX","UGP","PKY","PJT","UMH","RPT","PVG","PEN","RELX","PGTI","TSU","PNTA","PFX","CXP","PVTD","PPR","PIY","PBB","SCE-PG","CMRE-PC","CMRE-PB","BGE-PB","VNO-PJ","UBP-PF","TY-P","TCO-PJ","SUI-PA","QEP","QUOT","CTAA","QSR-WI","VNO","WSR","SBR","RTEC","TREC","TCI","RVT","IRT","SB-PC","RSO-PA","COR-PA","BCS-P","ARR-PB","ARR-PA","VNO-PI","SRG-RWI","SLG-PI","TOT","SNY","VALE","SAP","TEF","YPF","TSE","TS","TX","STAR","SYX","SFE","SHOP","VVR","SAQ","SCQ","VCO","SBNB","SCM","SBNA","CRD-B","UZA","SOJA","CRD-A","UZC","SSWN","SSW-PC","TRU","TRMR","TIME","UTI","TISI","TLYS","TCCA","TCCB","UCP","UNVR","UZB","UMH-PB","UBS-PD","GUT-PA","VHI","VSH","VZA","VALE-P","CFC-PB","RBS-PG","RBS-PE","IDG-CL","C-PN","WK","WSO-B","STI-WTA","WY-PA","MTB-WT","WRB-PC","WFC-PT","WPG-PGCL","BW-WI","KODK-WT","WPG-PH","WHX","WFC-WT","WPG-PG","XLS","YYN-TEST","NYCB-PU","ZB-PA","ZTS-WI","AA-PB","ABR-PC","ABR-PA","ABR-PB","ACT-PA","ACT","HSBC-PA","BCS-PA","AES-PC","AFSI-PE","AFI-WI","AF-PC","AFSI-PD","AFSI-PA","AFSI-PC","MITT-PA","AGO-PE","AGM-PC","MITT-PB","AGM-PA","AGO-PB","AGO-PF","AHT-PA","AHL-PA","AHT-PD","AIV-PZ","AIG-WT","AIV-PA","ALP-PO","ALL-PB","ARE-PD","ALR-PB","ALL-PD","ALL-PA","ARE-PE","ALP-PNCL","ALL-PE","ALP-PP","ALP-PN","ALP-PPCL","ALL-PC","ALL-PF","ALLY-PB","AMH-PB","BML-PI","AMTG-PA","AMT-PA","GAM-PB","MH-PC","BAC-PZ","BAC-PI","BAC-PD","AMRE","AMH-PC","GCV-PB","ANH-PC","ANH-PB","ANH-PA","KYN-PF","DD-WI","NLY-PC","ARI-PA","APL-PECL","APL","ARH-PC","ARN","ARN-CL","ARP-PE","UA-C-WI","ARP-PD","AWI-WI","CBL-PE","ASB-PC","CBL-PD","ATLS-WI","ATHL","AVIV","AXS-PD","AYN","MTB-P","FRC-PD","STI-PA","USB-PM","FRC-PB","VLY-PA","BANC-PD","BBT-PH","BBT-PG","BBT-PF","BDN-PE","CBB-PB","BFS-PC","BIO-B","UBP-PG","BKS-WI","BLD-WI","BPZ","DTLA-P","BRP","INF-RI","TAP-A","BTF","SB-PD","SB-PB","PSB-PT","BWXT-WI","BWS","BXLT-WI","CTLT","CLNY-PB","CFC-PA","CCI-PA","SCE-PJ","RLH-PA","IVR-PA","CLNY-PC","CLNY-PA","CABO-WI","CBS-A","CCV","CC-WI","CDR-PB","TCO-PK","REG-PG","REG-PF","CFR-PA","CFN","SCHW-PD","C-PS","C-PP","C-PL","C-PK","C-PC","GHC-WI","CMO-PE","CMA-WT","CPE-PA","CPGX-WI","CTC","STAR-PG","STAG-PB","SSW-PD","FPO-PA","EPR-PE","DFT-PA","STAR-PF","CYS-PA","GLOG-PA","CUBE-PA","CUBI-PD","SSW-PE","STAR-PI","CUBI-PC","KEY-PG","OFG-PB","CVD","CYS-PB","CYNI","DDR-PJ","DFS-PB","PSA-PT","MS-PG","PSA-PR","PSA-PB","DSX-PB","DLR-PE","DLR-PG","DLR-PH","DLNG-PA","DNY","DRL","DTT-CL","DUA","DYN-PA","SCE-PF","SCE-PK","EPC-WI","HE-PU","ELS-PC","ELX","ENR-WI","TNP-PC","ENH-PB","GAB-PG","GAB-PD","EQC-PE","EQC-PD","MNR-PA","IRET-PB","ESS-PH","PEI-PB","TGNA-WI","EXL-PB","EXL","WFC-PV","WFC-PQ","WFC-PN","WFC-PP","FCH-PA","FCH-PCCL","FCH-PC","FHN-PA","MFA-PB","FNFG-PB","RAS-PB","MTB-PC","HSFC-PB","PNC-PP","FMER-PA","FNB-PE","FRC-PG","FZ","GGT-PB","GCI-WI","GRX-PB","GPE-PA","GGP-PA","GNE-PA","GSL-PB","HZN-WI","GM-WTB","GNI","GS-PA","GS-PK","GS-PB","GS-PC","GS-PN","GS-PI","GPT-PA","GXP-PA","GY","HBM-WT","HDY","HT-PC","HL-PB","HT-PB","HES-PA","HIG-WT","PEB-PC","MH-PA","INN-PC","HUSI-PD","HUSI-PZCL","HUSI-PDCL","HUSI-PZ","ICE-WI","SCE-PH","IMPR","IPL-PD","IRE","IRF","ITCB","IVR-PB","JLA","JPM-PG","JPM-PD","JPG","JPM-PC","JRN","KIM-PK","KIM-PJ","KNM","KWK","LHO-PH","LAS","LDOS-WI","LXP-PC","PUK-PA","PL-PE","PL-PC","SSLT","LNC-WT","CHSP-PA","LO","OCIR","MER-PP","LYG-PACL","MER-PK","I-PA","MAS-WI","MCP","MILL-PC","MP-PD","MJI","MS-PE","MRH","MRH-PACL","MSZ","MSJ-CL","MSZ-CL","MT-WT-WI","NAV-PD","TNP-PB","NNN-PD","NCT-PC","NCT-PD","NCT-PB","NCFT","NEE-PJ","NEE-PG","NNP","NRF-PA","NTX-PC","NU","OAKS-PA","OFC-PL","RBS-PF","RBS-PL","RY-PT","BANC-PE","BANC-PC","OILT","COF-PD","OSG-WI","PRE-PE","PRE-PD","SRG-RI","PRE-PF","TCB-PC","PEB-PB","RSO-PB","PFG-PBCL","PNC-WT","PPS-PA","RPT-PD","TRNO-PA","PRY-CL","PSA-PO","PSA-PV","PSA-PX","PSA-POCL","PSA-PA","PT","PTP","PUK-P","PYB","PZB-CL","PZB","RAS-PC","RBS-PMCL","RBS-PNCL","RBS-PQCL","RBS-PPCL","RGP","RIOM","RNE","ROC","RSO-PC","RTI","RVT-WI","SAIC-WI","SCHW-PC","SCHW-PB","STAG-PC","UMH-PA","USB-PH","SOV-PC","ENH-PC","SRG-RW","SR","WRK-WI","STAG-PA","INN-PA","STI-WTB","TCC-CL","TLM","CORR-PA","TRLA","TRW","VNO-PG","TTM-RI","UTX-PA","VLY-WT","WRI-PFCL","WRI-PF","BAC-WTB","BAX-WI","CODE","COF-WT","SAN-PB","GRP-UN","INF-RW","INST","LTM","MET-PBCL","MET-PA","MILL-PD"]

    # Get user input
    input_text = st.sidebar.text_input('Enter first three letters of the stock ticker:')
    selected_tickers = st.sidebar.multiselect('Select Tickers', available_tickers)


    for ticker in selected_tickers:
        if st.sidebar.button(f'Get Analysis for {ticker}'):
            # Display interactive chart
            st.subheader(f'Interactive Chart for {ticker}')

            stock_history = get_stock_data_history(ticker)

            # Calculate technical indicators
            sma_50 = SMAIndicator(close=stock_history['Close'], window=50).sma_indicator()
            sma_200 = SMAIndicator(close=stock_history['Close'], window=200).sma_indicator()
            rsi = RSIIndicator(close=stock_history['Close']).rsi()

            # Create candlestick trace
            candlestick = go.Candlestick(x=stock_history.index,
                                         open=stock_history['Open'],
                                         high=stock_history['High'],
                                         low=stock_history['Low'],
                                         close=stock_history['Close'],
                                         name='Candlestick')

            # Create SMA 50 and SMA 200 traces
            sma_50_trace = go.Scatter(x=stock_history.index, y=sma_50, mode='lines', name='SMA 50', line=dict(color='orange'))
            sma_200_trace = go.Scatter(x=stock_history.index, y=sma_200, mode='lines', name='SMA 200', line=dict(color='red'))

            # Create RSI trace
            rsi_trace = go.Scatter(x=stock_history.index, y=rsi, mode='lines', name='RSI', line=dict(color='green'))

            # Combine traces into data list
            data = [candlestick, sma_50_trace, sma_200_trace, rsi_trace]

            # Layout settings
            layout = {
                'title': f'{ticker} Interactive Chart',
                'xaxis_title': 'Date',
                'yaxis_title': 'Price',
                'hovermode': 'x unified'
            }

            # Create figure and plot
            fig = go.Figure(data=data, layout=layout)
            st.plotly_chart(fig)

            # Display stock information
            stock_data = get_stock_data(ticker)
            if stock_data:
                st.subheader(f'Stock Information for {ticker}')
                col1, col2 = st.columns(2)

                for key, value in stock_data.items():
                    col1.write(f"**{key}:**")
                    col2.write(value)

                # Display historical prices
                st.subheader(f'Historical Prices for {ticker}')
                st.write("Please consider $ as your local trading currency")
                st.line_chart(stock_history['Close'])

            stock_news = get_stock_news(ticker)
            if stock_news:
                st.subheader(f'Latest News for {ticker}')
                for article in stock_news:
                    st.markdown(f"[{article['title']}]({article['link']})")


            investor_reports = get_investor_reports(ticker)
            if investor_reports:
                st.subheader(f'Latest Investor Report for {ticker}')
                top_investor_report = investor_reports[0]
                st.markdown(f"[{top_investor_report['title']}]({top_investor_report['link']})")

            # Get peer reports
            peer_reports = get_peer_reports(ticker)
            if peer_reports:
                st.subheader(f'Latest Peer Report for {ticker}')
                top_peer_report = peer_reports[0]
                st.markdown(f"[{top_peer_report['title']}]({top_peer_report['link']})")

            trading_decision = get_trading_recommendation(stock_history)
            st.subheader(f'Technical Analysis Recommendation for {ticker}')
            st.write(f"Suggestion: {trading_decision}")


if __name__ == '__main__':
    main()
